<tool id="salmonquant" name="Salmon quant" version="@VERSION@">
    <description>Perform dual-phase, reads or mapping-based estimation of transcript abundance from RNA-seq reads</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        #if $quant_type.qtype == "reads":
            @indexing@
            @salreads@
        #else:
            @salalign@
        #end if
            @salquant@
        ]]>
    </command>
    <inputs>
        <conditional name="quant_type">
            <param name="qtype" type="select" label="Select salmon quantification mode:">
                <option value="reads" selected="True">Reads</option>
                <option value="alignment">Alignment</option>
            </param>
            <when value="reads">
                <expand macro="index"/>
                <expand macro="reads"/>
            </when>
            <when value="alignment">
                <expand macro="align"/>
            </when>
        </conditional>
        <expand macro="quantboth"/>
    </inputs>
    <outputs>
        <data name="output_quant" format="tabular" from_work_dir="output/quant.sf" label="${tool.name} on ${on_string} (Quantification)" />
        <data name="output_gene_quant" format="tabular" from_work_dir="output/quant.genes.sf" label="${tool.name} on ${on_string} (Gene Quantification)">
            <filter>geneMap</filter>
        </data>
        <data name="output_sam" format="sam" from_work_dir="./output/samout.sam" label="${tool.name} on ${on_string} (SAM format)">
            <filter>quant_type['qtype'] == "reads" and quant_type['writeMappings']</filter>
        </data>
        <data name="postSample" format="bam" from_work_dir="postSample.bam" label="Sampled input alignments on ${on_string}">
            <filter>quant_type['qtype'] == "alignment" and quant_type['sampleOut']</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <conditional name="quant_type">
                <param name="qtype" value="reads"/>
                <conditional name="refTranscriptSource">
                    <param name="TranscriptSource" value="history"/>
                    <section name="s_index">
                        <param name="fasta" value="transcripts.fasta"/>
                    </section>
                </conditional>
                <section name="input">
                    <param name="single_or_paired.single_or_paired_opts" value="paired" />
                    <param name="single_or_paired.input_mate1" value="fastqs/reads_1.fastq" />
                    <param name="single_or_paired.input_mate2" value="fastqs/reads_2.fastq" />
                    <param name="single_or_paired.oreintation" value="U"/>
                </section>
                <param name="writeMappings" value="true"/>
            </conditional>
            <output name="output_quant" ftype="tabular">
                <assert_contents>
                    <has_text text="EffectiveLength" />
                    <has_text text="TPM" />
                    <has_text text="NM_001168316" />
                    <has_text text="NM_174914" />
                    <has_text text="NM_018953" />
                    <has_text text="NR_003084" />
                    <has_text text="NM_017410" />
                    <has_text text="NM_153693" />
                    <has_text text="NR_031764" />
                    <has_n_columns n="5" />
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="1">
            <conditional name="quant_type">
                <param name="qtype" value="reads"/>
                <conditional name="refTranscriptSource">
                    <param name="TranscriptSource" value="history"/>
                    <section name="s_index">
                        <param name="fasta" value="transcripts.fasta"/>
                    </section>
                </conditional>
                <section name="input">
                    <param name="single_or_paired.single_or_paired_opts" value="paired" />
                    <param name="single_or_paired.input_mate1" value="fastqs/reads_1.fastq.gz" />
                    <param name="single_or_paired.input_mate2" value="fastqs/reads_2.fastq.gz" />
                    <param name="single_or_paired.oreintation" value="U"/>
                </section>
            </conditional>
            <output name="output_quant" ftype="tabular">
                <assert_contents>
                    <has_text text="EffectiveLength" />
                    <has_text text="TPM" />
                    <has_text text="NM_001168316" />
                    <has_text text="NM_174914" />
                    <has_text text="NM_018953" />
                    <has_text text="NR_003084" />
                    <has_text text="NM_017410" />
                    <has_text text="NM_153693" />
                    <has_text text="NR_031764" />
                    <has_n_columns n="5" />
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="1">
            <conditional name="quant_type">
                <param name="qtype" value="reads"/>
                <conditional name="refTranscriptSource">
                    <param name="TranscriptSource" value="history"/>
                    <section name="s_index">
                        <param name="fasta" value="transcripts.fasta"/>
                    </section>
                </conditional>
                <section name="input">
                    <param name="single_or_paired.single_or_paired_opts" value="single" />
                    <param name="single_or_paired.input_mate1" value="fastqs/reads_both.fastq.bz2" />
                    <param name="single_or_paired.oreintation" value="U"/>
                </section>
            </conditional>
            <output name="output_quant" ftype="tabular">
                <assert_contents>
                    <has_text text="EffectiveLength" />
                    <has_text text="TPM" />
                    <has_text text="NM_001168316" />
                    <has_text text="NM_174914" />
                    <has_text text="NM_018953" />
                    <has_text text="NR_003084" />
                    <has_text text="NM_017410" />
                    <has_text text="NM_153693" />
                    <has_text text="NR_031764" />
                    <has_n_columns n="5" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        @salmonhelp@
    ]]></help>
    <expand macro="citations"/>
</tool>
